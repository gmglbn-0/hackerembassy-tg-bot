const Currency = require("../utils/currency");
const config = require("config");
const printersConfig = config.get("printers");
const StatusRepository = require("../repositories/statusRepository");
const UsersHelper = require("./usersHelper");
const usersRepository = require("../repositories/usersRepository");

// eslint-disable-next-line no-unused-vars
const Fund = require("../models/Fund");
// eslint-disable-next-line no-unused-vars
const Donation = require("../models/Donation");
// eslint-disable-next-line no-unused-vars
const UserState = require("../models/UserState");
// eslint-disable-next-line no-unused-vars
const User = require("../models/User");
// eslint-disable-next-line no-unused-vars
const Need = require("../models/Need");

/**
 * @param {Fund[]} funds
 * @param {Donation[]} donations
 */
async function createFundList(funds, donations, options = {}, mode) {
    const defaultOptions = { showAdmin: false, isApi: false, isHistory: false };
    options = { defaultOptions, ...options };

    let list = "";

    for (const fund of funds) {
        if (!fund) continue;

        let fundDonations = donations.filter(donation => {
            return donation.fund_id === fund.id;
        });

        let sum = await fundDonations.reduce(async (prev, current) => {
            let newValue = await Currency.convertCurrency(current.value, current.currency, fund.target_currency);
            return (await prev) + newValue;
        }, Promise.resolve(0));

        let statusEmoji = `‚öôÔ∏è \\[${fund.status}]`;

        if (fund.status === "closed") {
            statusEmoji = "‚òëÔ∏è \\[–∑–∞–∫—Ä—ã—Ç]";
        } else if (fund.status === "postponed") {
            statusEmoji = "‚è± \\[–æ—Ç–ª–æ–∂–µ–Ω]";
        } else if (fund.status === "open") {
            statusEmoji = sum < fund.target_value ? "üü†" : "üü¢";
            statusEmoji += options.isHistory ? " \\[–æ—Ç–∫—Ä—ã—Ç]" : "";
        }

        let tgCopyDelimiter = options.isApi ? "" : "#`";

        list += `${statusEmoji} ${tgCopyDelimiter}${fund.name}${tgCopyDelimiter} - –°–æ–±—Ä–∞–Ω–æ ${Currency.formatValueForCurrency(
            sum,
            fund.target_currency
        )} –∏–∑ ${fund.target_value} ${fund.target_currency}\n`;

        if (!options.isHistory) {
            for (const donation of fundDonations) {
                list += `      ${options.showAdmin ? `[id:${donation.id}] - ` : ""}${UsersHelper.formatUsername(
                    donation.username,
                    mode,
                    options.isApi
                )} - ${Currency.formatValueForCurrency(donation.value, donation.currency)} ${donation.currency}${
                    options.showAdmin && donation.accountant
                        ? ` ‚û°Ô∏è ${UsersHelper.formatUsername(donation.accountant, options.isApi)}`
                        : ""
                }\n`;
            }
        }

        if (options.showAdmin) {
            if (!options.isHistory) {
                list += "\n";
                list += `#\`/fund ${fund.name}#\`\n`;
                list += `#\`/exportfund ${fund.name}#\`\n`;
                list += `#\`/exportdonut ${fund.name}#\`\n`;
                list += `#\`/updatefund ${fund.name} with target 10000 AMD as ${fund.name}#\`\n`;
                list += `#\`/changefundstatus of ${fund.name} to status_name#\`\n`;
                list += `#\`/closefund ${fund.name}#\`\n`;
                list += `#\`/transferdonation donation_id to username#\`\n`;
                list += `#\`/adddonation 5000 AMD from @username to ${fund.name}#\`\n`;
                list += `#\`/changedonation donation_id to 5000 AMD#\`\n`;
                list += `#\`/removedonation donation_id#\`\n`;
            } else {
                list += `#\`/fund ${fund.name}#\`\n`;
            }
        }

        list += "\n";
    }

    return list;
}

/**
 * @param {{ open: boolean; changedby: string; }} state
 * @param {UserState[]} inside
 * @param {UserState[]} going
 * @returns {string}
 */
function getStatusMessage(state, inside, going, mode, isApi = false) {
    let stateText = state.open ? "#*–æ—Ç–∫—Ä—ã—Ç#*" : "#*–∑–∞–∫—Ä—ã—Ç#*";
    let stateEmoji = state.open ? "üîì" : "üîí";
    let stateSubText = state.open
        ? "–û—Ç–ª–∏—á–Ω—ã–π –ø–æ–≤–æ–¥ –∑–∞–π—Ç–∏, —Ç–∞–∫ —á—Ç–æ –∑–≤–æ–Ω–∏—Ç–µ –≤ –∑–≤–æ–Ω–æ–∫ –∏–ª–∏ –ø–∏—à–∏—Ç–µ –Ω–∞—Ö–æ–¥—è—â–∏–º—Å—è –≤–Ω—É—Ç—Ä–∏ - –≤–∞–º –æ—Ç–∫—Ä–æ—é—Ç\n"
        : `–ñ–¥–µ–º, –ø–æ–∫–∞ –∫—Ç–æ-—Ç–æ –∏–∑ —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤ –µ–≥–æ –æ—Ç–∫—Ä–æ–µ—Ç. –ú–æ–∂–µ—Ç –≤–Ω—É—Ç—Ä–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç, –∏–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–∫—Ä—ã—Ç–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–≤, –∏–ª–∏ –æ–Ω–∏ –æ–ø—è—Ç—å –∑–∞–±—ã–ª–∏ —Å–¥–µ–ª–∞—Ç—å /open? Who knows... –õ—É—á—à–µ —Å–ø—Ä–æ—Å–∏ —É –Ω–∏—Ö –≤ —á–∞—Ç–µ.\n`;
    let updateText = !isApi ? `‚è± –û–±–Ω–æ–≤–ª–µ–Ω–æ ${new Date().toLocaleString("RU-ru").replace(",", " –≤").substr(0, 21)}\n` : "";
    let stateFullText = `${stateEmoji} –°–ø–µ–π—Å ${stateText} –¥–ª—è –≥–æ—Å—Ç–µ–π ${UsersHelper.formatUsername(
        state.changedby,
        mode,
        isApi
    )}\n`;

    let insideText = inside.length > 0 ? "üë®‚Äçüíª –í–Ω—É—Ç—Ä–∏ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å:\n" : "üõå –í–Ω—É—Ç—Ä–∏ –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–º–µ—Ç–∏–ª—Å—è\n";

    for (const userStatus of inside) {
        insideText += `${UsersHelper.formatUsername(userStatus.username, mode, isApi)} ${getUserBadgesWithStatus(userStatus)}\n`;
    }

    let goingText = going.length > 0 ? "\nüöï –ü–ª–∞–Ω–∏—Ä—É—é—Ç —Å–µ–≥–æ–¥–Ω—è –∑–∞–π—Ç–∏:\n" : "";
    for (const userStatus of going) {
        goingText += `${UsersHelper.formatUsername(userStatus.username, mode, isApi)} ${getUserBadges(userStatus.username)}\n`;
    }

    return `${stateFullText}
${stateSubText}
${insideText}${goingText}
${updateText}`;
}

/**
 * @param {string} username
 * @returns {string}
 */
function getUserBadges(username) {
    let user = usersRepository.getUserByName(username);
    if (!user) return "";

    let roles = UsersHelper.getRoles(user);
    let roleBadges = `${roles.includes("member") ? "üîë" : ""}${roles.includes("accountant") ? "üìí" : ""}`;
    let customBadge = user.emoji ?? "";

    return `${roleBadges}${customBadge}`;
}

/**
 * @param {UserState} userStatus
 * @returns {string}
 */
function getUserBadgesWithStatus(userStatus) {
    let userBadges = getUserBadges(userStatus.username);
    let autoBadge = userStatus.type === StatusRepository.ChangeType.Auto ? "üì≤" : "";

    return `${autoBadge}${userBadges}`;
}

/**
 * @param {User[]} accountants
 * @returns {string}
 */
function getAccountsList(accountants, mode, isApi = false) {
    let accountantsList = "";

    if (accountants !== null) {
        accountantsList = accountants.reduce(
            (list, user) => `${list}${UsersHelper.formatUsername(user.username, mode, isApi)} ${getUserBadges(user.username)}\n`,
            ""
        );
    }

    return accountantsList;
}

/**
 * @param {User[]} residents
 * @returns {string}
 */
function getResidentsList(residents, mode) {
    let userList = "";
    for (const user of residents) {
        userList += `${UsersHelper.formatUsername(user.username, mode)} ${getUserBadges(user.username)}\n`;
    }

    return (
        `üë• –í–æ—Ç –æ–Ω–∏, –Ω–∞—à–∏ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–µ —Ä–µ–∑–∏–¥–µ–Ω—Ç—ã:\n` + userList + `\nüß† –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∏–º –ø–æ –ª—é–±–æ–º—É —Å–ø–µ–π—Å–æ–≤—Å–∫–æ–º—É –≤–æ–ø—Ä–æ—Å—É`
    );
}

/**
 * @param {{level: string; message: string; timestamp: string;}[]} monitorMessages
 * @returns {string}
 */
function getMonitorMessagesList(monitorMessages) {
    let messageList = "";

    for (const message of monitorMessages) {
        messageList += `${message.level === "error" ? "‚õî" : "‚è∫"} ${message.message} - ${message.timestamp}\n`;
    }

    return messageList;
}

/**
 * @param {Need[]} needs
 * @returns {string}
 */
function getNeedsList(needs, mode) {
    let message = `üëå –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ—Å–∏–ª\n`;

    if (needs.length > 0) {
        message = `üôè –ö—Ç–æ-–Ω–∏–±—É–¥—å, –∫—É–ø–∏—Ç–µ –ø–æ –¥–æ—Ä–æ–≥–µ –≤ —Å–ø–µ–π—Å:\n`;

        for (const need of needs) {
            message += `- #\`${need.text}#\` –ø–æ –ø—Ä–æ—Å—å–±–µ ${UsersHelper.formatUsername(need.requester, mode)}\n`;
        }
    }
    message += `\n‚ÑπÔ∏è –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∫—É–ø–∏—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ –¥–æ—Ä–æ–≥–µ –≤ —Å–ø–µ–π—Å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã #\`/buy item_name#\``;

    if (needs.length > 0) {
        message += `\n‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–∫—É–ø–∫—É —Å–¥–µ–ª–∞–Ω–Ω–æ–π –º–æ–∂–Ω–æ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ: `;
    }

    return message;
}

/**
 * @param {User[]} accountants
 * @param {boolean} isApi
 * @returns {string}
 */
function getDonateText(accountants, isApi = false) {
    let accountantsList = getAccountsList(accountants, isApi);

    return (
        `üí∏ –•–∞–∫—Å–ø–µ–π—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º –∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.
 –ú—ã –≤–Ω–æ—Å–∏–º —Å–≤–æ–π –≤–∫–ª–∞–¥ –≤ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–ø–µ–π—Å–∞: –æ–ø–ª–∞—Ç–∞ –∞—Ä–µ–Ω–¥—ã –∏ –∫–æ–º–º—É–Ω–∞–ª–∫–∏, –∑–∞–±–æ—Ç–∞ –æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –ø–æ–º–æ—â—å –≤ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.
 –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ª—é–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ. 
 
 –ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞–º –º–æ–∂–Ω–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:
 üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ Visa/Mastercard –ê—Ä–º–µ–Ω–∏–∏.${!isApi ? "\n       /donateCard" : ""}
 üí∞ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ ${
     !isApi
         ? `(–ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–∞–Ω–¥–∞–º)
       /donatebtc
       /donateeth
       /donateusdc
       /donateusdt`
         : ""
 }
 üíµ –ù–∞–ª–∏—á–∫–æ–π –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ (—Å–∞–º—ã–π –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç).
       ${!isApi ? "/donatecash\n" : ""}
 üìä –£–≤–∏–¥–µ—Ç—å –Ω–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Å–±–æ—Ä—ã –∏ –≤–∞—à –≤–∫–ª–∞–¥ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ ${!isApi ? "/" : ""}funds
 
 üíå –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –¥–æ–Ω–∞—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –Ω–∞—à–∏–º –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞–º, –æ–Ω–∏ –ø–æ–º–æ–≥—É—Ç.\n` + accountantsList
    );
}

/**
 * @param {boolean} isApi
 * @returns {string}
 */
function getJoinText(isApi = false) {
    return `üßëüèª‚Äçüè´ –ï—Å–ª–∏ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ï—Ä–µ–≤–∞–Ω–µ, —É–≤–ª–µ—á–µ–Ω—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ –∏ –∏—â–µ—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, –∑–∞—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞–º.
- –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –∫–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 20.00.
- –ß–∞—Å—Ç–æ –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º –≤ 20.00 –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏: –ø—Ä–∏–Ω–æ—Å–∏–º –≥–∏—Ç–∞—Ä—ã, –∏–≥—Ä–∞–µ–º –≤ Rocksmith –∏ –¥–∂–µ–º–∏–º.
- –í –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–µ–Ω—å —Å–ø–µ–π—Å —Ç–æ–∂–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –≥–æ—Å—Ç–µ–π, –≤–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É ${
        !isApi ? "/" : ""
    }status —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç –ª–∏ —Å–ø–µ–π—Å –∏ –µ—Å—Ç—å –ª–∏ —Ç–∞–º –∫—Ç–æ-–Ω–∏–±—É–¥—å.

üí∏ –ü–æ—Å–µ—â–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω—ã–µ (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ), –Ω–æ –ª—é–±—ã–µ –¥–æ–Ω–∞—Ç—ã –Ω–∞ –ø–æ–º–æ—â—å –Ω–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–∞–º –∏ –∞—Ä–µ–Ω–¥—É –æ—á–µ–Ω—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è.
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ ${!isApi ? "/" : ""}donate
${!isApi ? "\nüó∫ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏, –∂–º–∏ /location\n" : ""}
üîë –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–º —Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, —Ç.–µ. –∏–º–µ—Ç—å —Å–≤–æ–π –∫–ª—é—á, —Å–≤–æ—ë –º–µ—Å—Ç–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ—â–µ–π (–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Å–µ—Ä–≤–µ—Ä–∞ –∏.—Ç.–ø.), —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–Ω—è—Ç–∏–∏ —Ä–µ—à–µ–Ω–∏–π –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–ø–µ–π—Å–∞,\
 —Ç–æ –Ω–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—ã:
- –î—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç—å –∏ –Ω–µ–∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–æ—Å—Ç—å.
- –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∂–∏–∑–Ω–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.
- –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è (–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö –≤–∞—à–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π).

üßôüèª‚Äç‚ôÇÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ª—é–±–æ–º—É —Ä–µ–∑–∏–¥–µ–Ω—Ç—É —Å–ø–µ–π—Å–∞, –æ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç –≤–∞—à—É –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É –°–æ–≤–µ—Ç—É –°–ø–µ–π—Å–∞.
`;
}

/**
 * @param {boolean} isApi
 * @returns {string}
 */
function getEventsText(isApi = false) {
    const calendarLink = isApi
        ? "<a href='https://calendar.google.com/calendar/embed?src=9cdc565d78854a899cbbc7cb6dfcb8fa411001437ae0f66bce0a82b5e7679d5e%40group.calendar.google.com&ctz=Asia%2FYerevan'>Hacker Embassy Public Events</a>"
        : "#[Hacker Embassy Public Events#]#(https://calendar.google.com/calendar/embed?src=9cdc565d78854a899cbbc7cb6dfcb8fa411001437ae0f66bce0a82b5e7679d5e%40group.calendar.google.com&ctz=Asia%2FYerevan#)";
    const iCalLink = isApi
        ? "<a href='https://calendar.google.com/calendar/ical/9cdc565d78854a899cbbc7cb6dfcb8fa411001437ae0f66bce0a82b5e7679d5e@group.calendar.google.com/public/basic.ics'>iCal</a>"
        : "#[iCal#]#(https://calendar.google.com/calendar/ical/9cdc565d78854a899cbbc7cb6dfcb8fa411001437ae0f66bce0a82b5e7679d5e@group.calendar.google.com/public/basic.ics#)";

    return `üóì –ó–∞ –Ω–∞—à–∏–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏ –º–æ–∂–Ω–æ —Å–ª–µ–¥–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏–∫–µ
${calendarLink}
–ü–æ–¥–ø–∏—à–∏—Å—å –ø–ª—é—Å–∏–∫–æ–º ‚ûï –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ –≤–æ–∑—å–º–∏ ${iCalLink}

üé≠ –ß—Ç–æ —É –Ω–∞—Å –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç: 
- –ú–∞—Å—Ç–µ—Ä–∫–ª–∞—Å—Å—ã –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–º—ã –æ—Ç 3D –ø–µ—á–∞—Ç–∏, –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–∞–π–∫–∏ –¥–æ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π, –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Ç–µ–æ—Ä–µ–º –∏ —à–∏–±–∞—Ä–∏. –î–∞—Ç—É –∞–Ω–æ–Ω—Å–∏—Ä—É–µ–º –∑–∞—Ä–∞–Ω–µ–µ –≤ —á–∞—Ç–∏–∫–µ.
- –ß–∞—Å—Ç–æ –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º –≤ 21.00 –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏: –ø—Ä–∏–Ω–æ—Å–∏–º –≥–∏—Ç–∞—Ä—ã, –∏–≥—Ä–∞–µ–º –≤ Rocksmith –∏ –¥–∂–µ–º–∏–º.
- –ö–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 20.00 —É –Ω–∞—Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π, –æ–±—â–∞–µ–º—Å—è, –∑–Ω–∞–∫–æ–º–∏–º—Å—è –∏ —Ç—É—Å–∏–º.
- –í –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –¥–µ–Ω—å —Å–ø–µ–π—Å —Ç–æ–∂–µ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –≥–æ—Å—Ç–µ–π, —Å–º–æ—Ç—Ä–∏ status —Å–ø–µ–π—Å–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ.

üí∏ –ü–æ—Å–µ—â–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω—ã–µ (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ), –Ω–æ –ª—é–±—ã–µ –¥–æ–Ω–∞—Ç—ã –Ω–∞ –ø–æ–º–æ—â—å –Ω–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–∞–º –∏ –∞—Ä–µ–Ω–¥—É –æ—á–µ–Ω—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è.
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ ${!isApi ? "/" : ""}donate
`;
}

/** @type {string[]} */
const shortMonthNames = [
    "—è–Ω–≤–∞—Ä—è",
    "—Ñ–µ–≤—Ä–∞–ª—è",
    "–º–∞—Ä—Ç–∞",
    "–∞–ø—Ä–µ–ª—è",
    "–º–∞—è",
    "–∏—é–Ω—è",
    "–∏—é–ª—è",
    "–∞–≤–≥—É—Å—Ç–∞",
    "—Å–µ–Ω—Ç—è–±—Ä—è",
    "–æ–∫—Ç—è–±—Ä—è",
    "–Ω–æ—è–±—Ä—è",
    "–¥–µ–∫–∞–±—Ä—è",
];

/**
 * @param {User[]} birthdayUsers
 * @returns {string}
 */
function getBirthdaysList(birthdayUsers, mode) {
    let message = `üéÇ –í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –ø—Ä–∞–∑–¥–Ω—É—é—Ç —Å–≤–æ–∏ –¥–Ω—é—Ö–∏:\n`;

    let usersList = `\n–ù–∏–∫—Ç–æ? –°—Ç—Ä–∞–Ω–Ω–æ...\n`;

    if (birthdayUsers) {
        let usersWithDays = birthdayUsers
            .map(u => {
                let parts = u.birthday.split("-");
                return {
                    day: Number(parts[2]),
                    month: Number(parts[1]),
                    ...u,
                };
            })
            .filter(u => {
                return u.month === new Date().getMonth() + 1;
            })
            .sort((u1, u2) => u1.day - u2.day);

        if (usersWithDays.length > 0) {
            usersList = ``;
            for (const user of usersWithDays) {
                message += `${user.day} ${shortMonthNames[user.month - 1]} - ${UsersHelper.formatUsername(
                    user.username,
                    mode
                )}\n`;
            }
        }
    }

    message += `${usersList}
–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —Ç–µ–±—è —Ç–æ–∂–µ –ø–æ–∑–¥—Ä–∞–≤–∏–ª–∏? –î–æ–±–∞–≤–ª—è–π —Å–≤–æ—é –¥–Ω—é—Ö—É –∫–æ–º–∞–Ω–¥–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö:
#\`/mybirthday YYYY-MM-DD#\`
#\`/mybirthday MM-DD#\`
–ù–∞–¥–æ–µ–ª–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ–±—è? –í–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É:
#\`/mybirthday remove#\``;

    return message;
}

/**
 * @returns {string}
 */
function getPrintersInfo() {
    return `üñ® –£ –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ 3D –ø—Ä–∏–Ω—Ç–µ—Ä–∞:

üö∫ Anette –æ—Ç ubershy –∏ cake64
–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—É—Ç:
https://wiki.hackerembassy.site/ru/equipment/anette
–í–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ç–∏ —Å–ø–µ–π—Å–∞ –ø–æ –∞–¥—Ä–µ—Å—É ${printersConfig.anette.apibase}
–°—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /anette

üöπ Plumbus –æ—Ç the_mihalich
–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –Ω–µ–º—É –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—É—Ç:
https://wiki.hackerembassy.site/ru/equipment/plumbus
–í–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ç–∏ —Å–ø–µ–π—Å–∞ –ø–æ –∞–¥—Ä–µ—Å—É ${printersConfig.plumbus.apibase}
–°—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /plumbus
`;
}

/**
 * @param {number} num
 * @returns {string}
 */
function toMinSec(num) {
    if (isNaN(num) || !isFinite(num)) return "–•–∑";
    let numstr = num.toFixed(2);
    let [integral, decimal] = numstr.split(".");
    decimal = Math.floor((Number(decimal) * 60) / 100).toString();
    return `${integral}.${decimal.substring(0, 2).padStart(2, "0")}`;
}

/**
 * @param {{ print_stats: any; heater_bed: any; extruder: any; display_status: { progress: number; }; }} status
 * @returns {Promise<string>}
 */
async function getPrinterStatus(status) {
    let print_stats = status.print_stats;
    let state = print_stats.state;
    let heater_bed = status.heater_bed;
    let extruder = status.extruder;

    let message = `üí§ –°—Ç–∞—Ç—É—Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞: ${state}`;

    if (state === "printing") {
        let minutesPast = toMinSec(print_stats.total_duration / 60);
        let progress = (status.display_status.progress * 100).toFixed(0);
        let estimate = toMinSec((Number(minutesPast) / Number(progress)) * (100 - Number(progress)));

        message = `‚è≤ –ü–µ—á–∞—Ç–∞–µ—Ç—Å—è —Ñ–∞–π–ª ${print_stats.filename}

üïî –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è ${progress}%
   –ü—Ä–æ—à–ª–æ ${minutesPast} –º–∏–Ω—É—Ç
   –û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ ${estimate} –º–∏–Ω—É—Ç

üìè –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${print_stats.filament_used.toFixed(0)} –º–º —Ñ–∏–ª–∞–º–µ–Ω—Ç–∞ (${(print_stats.filament_used / 1000).toFixed(2)} –º)

üî• –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —ç–∫—Å—Ç—Ä—É–¥–µ—Ä–∞ ${extruder.temperature} C, —Ü–µ–ª–µ–≤–∞—è ${extruder.target} C
    –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–æ–ª–∞ ${heater_bed.temperature} C, —Ü–µ–ª–µ–≤–∞—è ${heater_bed.target} C
`;
    }

    return message;
}

module.exports = {
    createFundList,
    getAccountsList,
    getResidentsList,
    getStatusMessage,
    getDonateText,
    getJoinText,
    getEventsText,
    getNeedsList,
    getPrintersInfo,
    getPrinterStatus,
    getBirthdaysList,
    getMonitorMessagesList,
};
